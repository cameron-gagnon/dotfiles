# input: default git command. Ex. "git commit -m"
# output: scm_breeze aliasas for git command. Ex. "gcm = git commit -m"
function lscm() {
    list_aliases $@
}

function search_file() {
    echo "Searching $1 for $2..."
    # specify grep location in case it's aliased. when it's aliased it messes up
    # the way parameters are passed to the alias/function
    /usr/bin/grep --color=auto -i "$2" "$1" | less
}

function dpkgl() {
    dpkg -l *$1*
}

function make_ssh_key() {
    ssh-keygen -t rsa -b 4096 -C "$1"
}

# updates the $SSH_AUTH_SOCK to be the correct socket file
# intended to be called from tmux to reattach to the correct ssh socket
function fixssh() {
    eval `tmux show-env -s | grep '^SSH_'`;
    ssh-add -l
}

function verify_x509_cert() {
    openssl x509 -noout -text -in $1
}

function verify_x509_certs() {
    openssl crl2pkcs7 -nocrl -certfile $1 | openssl pkcs7 -print_certs -text -noout
}

function csr() {
    openssl req -new -newkey rsa:2048 -nodes -keyout ${1}.key -out ${1}.csr
}

function check_mod() {
    openssl rsa -modulus -noout -in ${1}.key
    openssl x509 -modulus -noout -in ${1}.cert
}

# input:
#  $1 = 'status' 'start' 'stop' 'disable' 'enable'
#  $2 = <service_name>
function _sysctl() {
    sudo systemctl $1 $2
}

function create_tmux_setup() {
    SESSION=$USER;

    # Create session
    tmux -2 new-session -d -s $SESSION;

    # Setup dev window
    tmux new-window -t $SESSION:1 -n 'dev124' 'ssh dev124 -A'

    # Setup sandbox window
    tmux new-window -t $SESSION:2 -n 'n1-spare' 'ssh n1-spare.sandbox.meraki.com -A'

    # Setup a window for script/server
    tmux new-window -t $SESSION:3 -n 'Server';
    tmux split-window -v;
    tmux select-pane -t 0;
    tmux send-keys "co/manage/script/server --skip rails32" C-m;
    tmux select-pane -t 1;
    tmux send-keys "co/manage/script/server --start rails32" C-m;

    # Set default window
    tmux select-window -t $SESSION:1

    # Attach to session
    tmux -2 attach-session -t $SESSION
}

# copy dotfiles to ssh machines
function bssh {
    (
        server="$1"
        cd ~
        if [ $(ssh $server '[ ! -d ./.vim/bundle ]') ];
        then
            echo "$Yellow Server $server does not have our configuration.  Configuring... $Reset"
            tar -hczf - .bashrc .bash_aliases .vimrc .gitconfig .vim/* .scm_breeze/* \
                | ssh $server 'cd && tar -xzf -'
            ssh $server './.scm_breeze/install.sh'
        else
            echo "$Green Server $server already configured. SSHing in...  $Reset"
        fi
        ssh $server
    )
}

function git_checkout_branch {
    git checkout -b ${USER}-$@
}

function ctags_fn {
    `brew --prefix`/bin/ctags $@
}

# otwb 1 will log into bandit level 1
function __ssh_overthewire {
    if [[ -z "$3" ]];
    then
      echo "Must provide level password. e.g. 'otwu 1'"
      return
    fi
    username=$1
    portNum=$2
    levelNum=$3
    password=$(cat ~/ctfs/overthewire/$username/level_passwords.txt | grep "level$levelNum:" | cut -d':' -f2)
    hostname="$username$levelNum@$username.labs.overthewire.org"
    sshBin="/usr/bin/ssh"
    portFlag="-p"

    open -a "/Applications/Google Chrome.app" https://overthewire.org/wargames/$username/$username$(( levelNum + 1)).html

    echo "enter the following password when prompted:\n$password"
    $sshBin $hostname $portFlag $portNum
}

function tf12() {
    export PATH="/usr/local/opt/terraform@0.12/bin:$PATH"
}

function __last_command() {
    fc -ln -1 | awk '{$1=$1}1' | pbcopy
}

function __pr_review() {
    # open new pane in vertical split with command `grip...`
    tmux split-window -v grip -b ~/.pr_review

    # select pane above target
    tmux select-pane -U
    vim ~/.pr_review
}

function __tmux_rename_window() {
    tmux rename-window $@
}

function todo() {
    vim ~/.todo
}

# scm_breeze wrappers
alias v='ge vim'
alias rm='ge /bin/rm'
alias cat='ge /bin/cat'
alias tree='ge $(/usr/bin/which tree)'
#alias l='exec_scmb_expand_args $(/usr/bin/which ls) -lah'
alias cp='ge $(/usr/bin/which cp)'

#login for linux terminal on CAEN Servers
#alias grep='grep --color=auto --exclude-dir venv --exclude-dir .git $@'
alias ..2="cd ../.."
alias ..3="cd ../../.."
alias ..4="cd ../../../.."
alias ..5="cd ../../../../.."
alias ..="cd .."
alias act='. venv/bin/activate'
alias af='search_file ~/.always_forget.txt'
alias ba="v ~/.bash_aliases"
alias be='bundle exec'
alias bi='bundle install'
alias c='clear'
alias check_mod='check_mod'
alias cnw='code --new-window ./'
alias ct='cdm && /usr/bin/ctags -R --exclude=node_modules --exclude=*.js --exclude=.git --exclude=vendor --exclude=public --exclude=private'
alias ctags="ctags_fn"
alias dc='docker-compose'
alias e='exit'
alias fsh='fixssh'
alias gap='git add -p'
alias gcm='git commit -m '
alias gcmh='git commit --amend --no-edit'
alias gdoc='go doc'
alias gignore='git update-index --assume-unchanged'
alias goc='git checkout'
alias gocb='git_checkout_branch'
alias gpsf='git push --force'
alias grbim='git rebase -i master'
alias grs='git reset'
alias gunignore='git update-index --no-assume-unchanged'
alias gup='(git checkout master || git checkout main) && git pull --rebase && git checkout - && (git rebase origin/master || git rebase origin/main)'
alias hist='search_file ~/.shell_log | grep -i'
alias ipinfo='curl ipinfo.io'
alias lc='__last_command'
alias mod='chmod +x'
alias most="history | cut -c 8- | sort | uniq -c | sort"
alias myip="curl ifconfig.co"
alias o='open'
alias otwb='__ssh_overthewire bandit 2220'
alias otwl='v ~/ctfs/overthewire/bandit/level_passwords.txt'
alias otwu='__ssh_overthewire utumno 2227'
alias pip='pip3'
alias prr='__pr_review'
alias rgf='rg --files | rg'
alias sdisable='_sysctl disable'
alias senable='_sysctl enable'
alias srestart='_sysctl restart'
alias sstart='_sysctl start'
alias sstatus='_sysctl status'
alias sstop='_sysctl stop'
alias ta='tmux a || create_tmux_setup'
alias tc='cat tmp | pbcopy'
alias tf='terraform'
alias tfa='tf apply'
alias tfi='tf init'
alias tfp='tf plan -out tfplan'
alias tfs='tf show tfplan | less'
alias tfsp='tf state pull > terraform.tfstate'
alias tre='__tmux_rename_window'
alias u='. ~/.bashrc && . ~/.zshrc'
alias vcrt='verify_x509_cert'
alias vcrts='verify_x509_certs'
alias vedit='v ~/.vimrc'
